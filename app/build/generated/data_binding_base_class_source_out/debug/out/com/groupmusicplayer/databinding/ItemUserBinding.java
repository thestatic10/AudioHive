// Generated by view binder compiler. Do not edit!
package com.groupmusicplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.chip.Chip;
import com.groupmusicplayer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemUserBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Chip chipHost;

  @NonNull
  public final ImageView ivOnlineStatus;

  @NonNull
  public final TextView tvJoinTime;

  @NonNull
  public final TextView tvUserInitials;

  @NonNull
  public final TextView tvUserName;

  @NonNull
  public final View viewUserAvatar;

  private ItemUserBinding(@NonNull LinearLayout rootView, @NonNull Chip chipHost,
      @NonNull ImageView ivOnlineStatus, @NonNull TextView tvJoinTime,
      @NonNull TextView tvUserInitials, @NonNull TextView tvUserName,
      @NonNull View viewUserAvatar) {
    this.rootView = rootView;
    this.chipHost = chipHost;
    this.ivOnlineStatus = ivOnlineStatus;
    this.tvJoinTime = tvJoinTime;
    this.tvUserInitials = tvUserInitials;
    this.tvUserName = tvUserName;
    this.viewUserAvatar = viewUserAvatar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chip_host;
      Chip chipHost = ViewBindings.findChildViewById(rootView, id);
      if (chipHost == null) {
        break missingId;
      }

      id = R.id.iv_online_status;
      ImageView ivOnlineStatus = ViewBindings.findChildViewById(rootView, id);
      if (ivOnlineStatus == null) {
        break missingId;
      }

      id = R.id.tv_join_time;
      TextView tvJoinTime = ViewBindings.findChildViewById(rootView, id);
      if (tvJoinTime == null) {
        break missingId;
      }

      id = R.id.tv_user_initials;
      TextView tvUserInitials = ViewBindings.findChildViewById(rootView, id);
      if (tvUserInitials == null) {
        break missingId;
      }

      id = R.id.tv_user_name;
      TextView tvUserName = ViewBindings.findChildViewById(rootView, id);
      if (tvUserName == null) {
        break missingId;
      }

      id = R.id.view_user_avatar;
      View viewUserAvatar = ViewBindings.findChildViewById(rootView, id);
      if (viewUserAvatar == null) {
        break missingId;
      }

      return new ItemUserBinding((LinearLayout) rootView, chipHost, ivOnlineStatus, tvJoinTime,
          tvUserInitials, tvUserName, viewUserAvatar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
